<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="main" access="public">
    <Locals>
      <Local name="bCom" type="bool" xsi:type="array" size="1" />
      <Local name="bMove" type="bool" xsi:type="array" size="1" />
      <Local name="bOk" type="bool" xsi:type="array" size="1" />
      <Local name="bStop" type="bool" xsi:type="array" size="1" />
      <Local name="i" type="num" xsi:type="array" size="1" />
      <Local name="j" type="num" xsi:type="array" size="1" />
      <Local name="nLenMsg" type="num" xsi:type="array" size="1" />
      <Local name="nOffsX" type="num" xsi:type="array" size="1" />
      <Local name="nOffsY" type="num" xsi:type="array" size="1" />
      <Local name="nOverlap" type="num" xsi:type="array" size="1" />
      <Local name="nPosString" type="num" xsi:type="array" size="1" />
      <Local name="nStepX" type="num" xsi:type="array" size="1" />
      <Local name="nStepY" type="num" xsi:type="array" size="1" />
      <Local name="nStepsX" type="num" xsi:type="array" size="1" />
      <Local name="nStepsY" type="num" xsi:type="array" size="1" />
      <Local name="nWhichBttn" type="num" xsi:type="array" size="1" />
      <Local name="nWidthX" type="num" xsi:type="array" size="1" />
      <Local name="nWidthY" type="num" xsi:type="array" size="1" />
      <Local name="sTemp" type="string" xsi:type="array" size="1" />
      <Local name="sXVal" type="string" xsi:type="array" size="1" />
      <Local name="sYVal" type="string" xsi:type="array" size="1" />
      <Local name="trsfApproZ20" type="trsf" xsi:type="array" size="1" />
      <Local name="trsfApproZ5" type="trsf" xsi:type="array" size="1" />
      <Local name="trsfTempMove" type="trsf" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin

  userPage()
  cls()
  putln("Please Press F8 to START")
  call usrButtonTxt(8,"HERE")
  //call usrContinue(nWhichBttn, false)
  call usrSelect(nWhichBttn)
  nWhichBttn=-1
  movej(jJointRxZeros,flange,mNomSpeed)
  waitEndMove()

  nNumPort=1000
  sInputMsg=""
  sOutputMsg=""

  sioCtrl(sSio,"port",nNumPort)
  //sioCtrl( sSio, "target",x_sIP)
  sioCtrl(sSio,"endOfString",13)
  sioCtrl(sSio,"nangle",true)
  sioCtrl(sSio,"timeout",0)
  sioCtrl(sSio,"clients",1)

  // If coms or manual aks user or wait Start Comand
  cls()
  putln("Waiting for the 'START' command ...")
  bOk=false
  while bOk==false
    sInputMsg=sSio
    if sInputMsg=="START"
      bOk=true
    else
      bOk=false
    endIf
  endWhile


  // TAREA DE LOGGING
  taskCreate "LoggerTask", 10, pLogger()


  if bOk==true
    // Aproximacion a punto origen Escaneo
    trsfApproZ20={0,0,-20,0,0,0}
    trsfApproZ5={0,0,-5,0,0,0}
    nStepX=0
    nStepY=0

    movej(appro(pPointRxOrigin,trsfApproZ20),tTool,mNomSpeed)
    movel(appro(pPointRxOrigin,trsfApproZ5),tTool,mMdescMov)
    waitEndMove()

    bStop=false
    while bStop==false
      cls()
      putln("Waiting the 'MOVE' / 'STOP' command ...")
      bMove=false
      sInputMsg=sSio
      sTemp=left(sInputMsg,4)
      if sTemp=="MOVE"
        nLenMsg=len(sInputMsg)
        cls()
        putln("Comand Received: "+toString("",nLenMsg))
        putln("   STR: "+sInputMsg)
        putln("   CMD: "+sTemp)
        sTemp=right(sInputMsg,nLenMsg-5)
        putln("   COORD: "+sTemp)
        // Split now the X and Y
        nPosString=find(sTemp,",")
        sXVal=left(sTemp,nPosString)
        nLenMsg=len(sTemp)
        sYVal=right(sTemp,nLenMsg-nPosString-1)
        toNum(sXVal,nStepX,bMove)
        toNum(sYVal,nStepY,bMove)
        putln("   Steps: ")
        putln("      OffsX: "+toString("1.3",nStepX))
        putln("      OffsY: "+toString("1.3",nStepY))
        putln("")
        bMove=true
        //        call usrContinue(nWhichBttn, false)
        //        if nWhichBttn == 8
        //          bMove = true
        //        else 
        //          bMove = false
        //        endIf
      elseIf sTemp=="STOP"
        bStop=true
      else
        bMove=false
      endIf

      if bStop==true
        trsfTempMove.z=trsfTempMove.z-20
        movel(appro(pPointRxOrigin,trsfTempMove),tTool,mMdescMov)
        movej(jJointRxZeros,flange,mNomSpeed)
        waitEndMove()
        sOutputMsg="STOPPED"
        sSio=sOutputMsg
        stopMove()
        return
      else
        cls()
      endIf

      if bMove==true
        //Prepare Movement
        trsfTempMove.x=trsfApproZ5.x-nStepX
        trsfTempMove.y=trsfApproZ5.y+nStepY
        // Move robot
        movel(appro(pPointRxOrigin,trsfTempMove),tTool,mMdescFibra)
        waitEndMove()
        pTempSocket=appro(pPointRxOrigin,trsfTempMove)
        sOutputMsg="POS,"+toString("",i)+","+toString("",j)+","+toString(".2",pTempSocket.trsf.x)+","+toString(".2",pTempSocket.trsf.y)
        sSio=sOutputMsg
      else
        sOutputMsg="NOT MOVED"
        // sSio=sOutputMsg
      endIf

    endWhile

    // Return to home
    trsfTempMove.z=trsfTempMove.z-20
    movel(appro(pPointRxOrigin,trsfTempMove),tTool,mMdescMov)
    movej(jJointRxZeros,flange,mNomSpeed)
    waitEndMove()
  else
    stopMove()
    return
  endIf

end]]></Code>
  </Program>
</Programs>